/**
 * Reporting
 * Clearswift Reporting Service API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DocumentActivity', 'model/DocumentMatch'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DocumentActivity'), require('../model/DocumentMatch'));
  } else {
    // Browser globals (root is window)
    if (!root.Reporting) {
      root.Reporting = {};
    }
    root.Reporting.IGApi = factory(root.Reporting.ApiClient, root.Reporting.DocumentActivity, root.Reporting.DocumentMatch);
  }
}(this, function(ApiClient, DocumentActivity, DocumentMatch) {
  'use strict';

  /**
   * IG service.
   * @module api/IGApi
   * @version 1.0.0
   */

  /**
   * Constructs a new IGApi. 
   * @alias module:api/IGApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the igDocumentsIdMatchesGet operation.
     * @callback module:api/IGApi~igDocumentsIdMatchesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DocumentMatch>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the list of matches for a chosen document
     * @param {Number} id The document id to get matches for
     * @param {Object} opts Optional parameters
     * @param {String} opts.authorization 
     * @param {module:api/IGApi~igDocumentsIdMatchesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DocumentMatch>}
     */
    this.igDocumentsIdMatchesGet = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling igDocumentsIdMatchesGet");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Authorization': opts['authorization']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [DocumentMatch];

      return this.apiClient.callApi(
        '/ig/documents/{id}/matches', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the igUsersIdActiveDocumentsGet operation.
     * @callback module:api/IGApi~igUsersIdActiveDocumentsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DocumentActivity>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves document activity for a specific user&#39;s registered documents
     * @param {Number} id User to select documents for
     * @param {Object} opts Optional parameters
     * @param {String} opts.authorization 
     * @param {module:api/IGApi~igUsersIdActiveDocumentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DocumentActivity>}
     */
    this.igUsersIdActiveDocumentsGet = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling igUsersIdActiveDocumentsGet");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Authorization': opts['authorization']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [DocumentActivity];

      return this.apiClient.callApi(
        '/ig/users/{id}/activeDocuments', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
